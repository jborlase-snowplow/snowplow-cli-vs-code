{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "JSON with Snowplow Support",
  "scopeName": "source.json.snowplow",
  "fileTypes": ["json"],
  "patterns": [
    {
      "include": "#value"
    }
  ],
  "repository": {
    "array": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.json"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.json"
        }
      },
      "name": "meta.structure.array.json",
      "patterns": [
        {
          "include": "#value"
        },
        {
          "match": ",",
          "name": "punctuation.separator.array.json"
        },
        {
          "match": "[^\\s\\]]",
          "name": "invalid.illegal.expected-array-separator.json"
        }
      ]
    },
    "constant": {
      "match": "\\b(?:true|false|null)\\b",
      "name": "constant.language.json"
    },
    "number": {
      "match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
      "name": "constant.numeric.json"
    },
    "object": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.begin.json"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.end.json"
        }
      },
      "name": "meta.structure.dictionary.json",
      "patterns": [
        {
          "comment": "the JSON object key",
          "include": "#objectkey"
        },
        {
          "include": "#objectvalue"
        }
      ]
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.json"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.json"
        }
      },
      "name": "string.quoted.double.json",
      "patterns": [
        {
          "match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
          "name": "constant.character.escape.json"
        },
        {
          "match": "\\\\.",
          "name": "invalid.illegal.unrecognized-string-escape.json"
        }
      ]
    },
    "objectkey": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.json"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.json"
        }
      },
      "name": "string.quoted.double.json support.type.property-name.json",
      "patterns": [
        {
          "match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
          "name": "constant.character.escape.json"
        },
        {
          "match": "\\\\.",
          "name": "invalid.illegal.unrecognized-string-escape.json"
        },
        {
          "match": "apiVersion|resourceType|resourceName",
          "name": "support.type.property-name.snowplow.json"
        },
        {
          "match": "data|self|vendor|name|version|format|properties|meta|schemaType|hidden",
          "name": "support.type.property-name.snowplow-data.json"
        }
      ]
    },
    "objectvalue": {
      "begin": ":",
      "beginCaptures": {
        "0": {
          "name": "punctuation.separator.dictionary.key-value.json"
        }
      },
      "end": "(?=[,\\}])",
      "patterns": [
        {
          "comment": "the JSON object value",
          "include": "#value"
        }
      ]
    },
    "value": {
      "patterns": [
        {
          "include": "#constant"
        },
        {
          "include": "#number"
        },
        {
          "include": "#string"
        },
        {
          "include": "#array"
        },
        {
          "include": "#object"
        }
      ]
    }
  }
}
